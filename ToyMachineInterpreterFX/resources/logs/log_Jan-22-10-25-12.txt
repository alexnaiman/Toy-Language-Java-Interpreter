StateId:4
ExecutionStack:
	fork([await( cnt );
	[WriteHeap(v1,readHeap(v1)*10);
	print(readHeap(v1));];];)
	[fork([await( cnt );
	[WriteHeap(v2,readHeap(v2)*10);
	[WriteHeap(v2,readHeap(v2)*10);
	print(readHeap(v2));];];];);
	[await( cnt );
	print(readHeap(v3));];];
SymTable:
	cnt::=2
	v1::=1
	v2::=2
	v3::=3

HEAP: 
1->2
2->3
3->4
FileTable:	
BarrierTable:	<2,3->{}
>;
Out:

################
StateId:4
ExecutionStack:
	[fork([await( cnt );
	[WriteHeap(v2,readHeap(v2)*10);
	[WriteHeap(v2,readHeap(v2)*10);
	print(readHeap(v2));];];];);
	[await( cnt );
	print(readHeap(v3));];];
SymTable:
	cnt::=2
	v1::=1
	v2::=2
	v3::=3

HEAP: 
1->2
2->3
3->4
FileTable:	
BarrierTable:	<2,3->{}
>;
Out:

################
StateId:5
ExecutionStack:
	[await( cnt );
	[WriteHeap(v1,readHeap(v1)*10);
	print(readHeap(v1));];];
SymTable:
	cnt::=2
	v1::=1
	v2::=2
	v3::=3

HEAP: 
1->2
2->3
3->4
FileTable:	
BarrierTable:	<2,3->{}
>;
Out:

################
StateId:4
ExecutionStack:
	[fork([await( cnt );
	[WriteHeap(v2,readHeap(v2)*10);
	[WriteHeap(v2,readHeap(v2)*10);
	print(readHeap(v2));];];];);
	[await( cnt );
	print(readHeap(v3));];];
SymTable:
	cnt::=2
	v1::=1
	v2::=2
	v3::=3

HEAP: 
1->2
2->3
3->4
FileTable:	
BarrierTable:	<2,3->{}
>;
Out:

################
StateId:5
ExecutionStack:
	[await( cnt );
	[WriteHeap(v1,readHeap(v1)*10);
	print(readHeap(v1));];];
SymTable:
	cnt::=2
	v1::=1
	v2::=2
	v3::=3

HEAP: 
1->2
2->3
3->4
FileTable:	
BarrierTable:	<2,3->{}
>;
Out:

################
StateId:4
ExecutionStack:
	fork([await( cnt );
	[WriteHeap(v2,readHeap(v2)*10);
	[WriteHeap(v2,readHeap(v2)*10);
	print(readHeap(v2));];];];)
	[await( cnt );
	print(readHeap(v3));];
SymTable:
	cnt::=2
	v1::=1
	v2::=2
	v3::=3

HEAP: 
1->2
2->3
3->4
FileTable:	
BarrierTable:	<2,3->{}
>;
Out:

################
StateId:5
ExecutionStack:
	await( cnt )
	[WriteHeap(v1,readHeap(v1)*10);
	print(readHeap(v1));];
SymTable:
	cnt::=2
	v1::=1
	v2::=2
	v3::=3

HEAP: 
1->2
2->3
3->4
FileTable:	
BarrierTable:	<2,3->{}
>;
Out:

################
