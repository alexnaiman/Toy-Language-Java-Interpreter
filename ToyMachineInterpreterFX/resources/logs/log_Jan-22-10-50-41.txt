StateId:1
ExecutionStack:
	fork([await( cnt );
	[WriteHeap(v2,readHeap(v2)*10);
	[WriteHeap(v2,readHeap(v2)*10);
	print(readHeap(v2));];];];)
	[await( cnt );
	print(readHeap(v3));];
SymTable:
	cnt::=1
	v1::=1
	v2::=2
	v3::=3

HEAP: 
1->2
2->3
3->4
FileTable:	
BarrierTable:	<1,3->{}
>;
Out:

################
StateId:2
ExecutionStack:
	await( cnt )
	[WriteHeap(v1,readHeap(v1)*10);
	print(readHeap(v1));];
SymTable:
	cnt::=1
	v1::=1
	v2::=2
	v3::=3

HEAP: 
1->2
2->3
3->4
FileTable:	
BarrierTable:	<1,3->{}
>;
Out:

################
StateId:1
ExecutionStack:
	[await( cnt );
	print(readHeap(v3));];
SymTable:
	cnt::=1
	v1::=1
	v2::=2
	v3::=3

HEAP: 
1->2
2->3
3->4
FileTable:	
BarrierTable:	<1,3->{2,}
>;
Out:

################
StateId:2
ExecutionStack:
	[WriteHeap(v1,readHeap(v1)*10);
	print(readHeap(v1));];
SymTable:
	cnt::=1
	v1::=1
	v2::=2
	v3::=3

HEAP: 
1->2
2->3
3->4
FileTable:	
BarrierTable:	<1,3->{2,}
>;
Out:

################
StateId:3
ExecutionStack:
	[await( cnt );
	[WriteHeap(v2,readHeap(v2)*10);
	[WriteHeap(v2,readHeap(v2)*10);
	print(readHeap(v2));];];];
SymTable:
	cnt::=1
	v1::=1
	v2::=2
	v3::=3

HEAP: 
1->2
2->3
3->4
FileTable:	
BarrierTable:	<1,3->{2,}
>;
Out:

################
StateId:1
ExecutionStack:
	[await( cnt );
	print(readHeap(v3));];
SymTable:
	cnt::=1
	v1::=1
	v2::=2
	v3::=3

HEAP: 
1->2
2->3
3->4
FileTable:	
BarrierTable:	<1,3->{2,}
>;
Out:

################
StateId:2
ExecutionStack:
	[WriteHeap(v1,readHeap(v1)*10);
	print(readHeap(v1));];
SymTable:
	cnt::=1
	v1::=1
	v2::=2
	v3::=3

HEAP: 
1->2
2->3
3->4
FileTable:	
BarrierTable:	<1,3->{2,}
>;
Out:

################
StateId:3
ExecutionStack:
	[await( cnt );
	[WriteHeap(v2,readHeap(v2)*10);
	[WriteHeap(v2,readHeap(v2)*10);
	print(readHeap(v2));];];];
SymTable:
	cnt::=1
	v1::=1
	v2::=2
	v3::=3

HEAP: 
1->2
2->3
3->4
FileTable:	
BarrierTable:	<1,3->{2,}
>;
Out:

################
StateId:1
ExecutionStack:
	await( cnt )
	print(readHeap(v3));
SymTable:
	cnt::=1
	v1::=1
	v2::=2
	v3::=3

HEAP: 
1->2
2->3
3->4
FileTable:	
BarrierTable:	<1,3->{2,}
>;
Out:

################
StateId:2
ExecutionStack:
	WriteHeap(v1,readHeap(v1)*10)
	print(readHeap(v1));
SymTable:
	cnt::=1
	v1::=1
	v2::=2
	v3::=3

HEAP: 
1->2
2->3
3->4
FileTable:	
BarrierTable:	<1,3->{2,}
>;
Out:

################
StateId:3
ExecutionStack:
	await( cnt )
	[WriteHeap(v2,readHeap(v2)*10);
	[WriteHeap(v2,readHeap(v2)*10);
	print(readHeap(v2));];];
SymTable:
	cnt::=1
	v1::=1
	v2::=2
	v3::=3

HEAP: 
1->2
2->3
3->4
FileTable:	
BarrierTable:	<1,3->{2,}
>;
Out:

################
StateId:1
ExecutionStack:
	await( cnt )
	print(readHeap(v3));
SymTable:
	cnt::=1
	v1::=1
	v2::=2
	v3::=3

HEAP: 
1->2
2->3
3->4
FileTable:	
BarrierTable:	<1,3->{2,}
>;
Out:

################
StateId:2
ExecutionStack:
	WriteHeap(v1,readHeap(v1)*10)
	print(readHeap(v1));
SymTable:
	cnt::=1
	v1::=1
	v2::=2
	v3::=3

HEAP: 
1->2
2->3
3->4
FileTable:	
BarrierTable:	<1,3->{2,}
>;
Out:

################
StateId:3
ExecutionStack:
	await( cnt )
	[WriteHeap(v2,readHeap(v2)*10);
	[WriteHeap(v2,readHeap(v2)*10);
	print(readHeap(v2));];];
SymTable:
	cnt::=1
	v1::=1
	v2::=2
	v3::=3

HEAP: 
1->2
2->3
3->4
FileTable:	
BarrierTable:	<1,3->{2,}
>;
Out:

################
StateId:1
ExecutionStack:
	print(readHeap(v3));
SymTable:
	cnt::=1
	v1::=1
	v2::=2
	v3::=3

HEAP: 
1->20
2->3
3->4
FileTable:	
BarrierTable:	<1,3->{2,1,3,}
>;
Out:

################
StateId:2
ExecutionStack:
	print(readHeap(v1));
SymTable:
	cnt::=1
	v1::=1
	v2::=2
	v3::=3

HEAP: 
1->20
2->3
3->4
FileTable:	
BarrierTable:	<1,3->{2,1,3,}
>;
Out:

################
StateId:3
ExecutionStack:
	[WriteHeap(v2,readHeap(v2)*10);
	[WriteHeap(v2,readHeap(v2)*10);
	print(readHeap(v2));];];
SymTable:
	cnt::=1
	v1::=1
	v2::=2
	v3::=3

HEAP: 
1->20
2->3
3->4
FileTable:	
BarrierTable:	<1,3->{2,1,3,}
>;
Out:

################
